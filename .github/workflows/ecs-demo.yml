name: DEV - Backend Build & Deployment
on:
  push:
    branches:    
      - dev
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        ref: master
    - name: Logging in to AWS ECR
      env:
        AWS_DEFAULT_REGION: "us-east-1"
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        echo Logging in to Amazon ECR...
        $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      
    - name: Create & Push container Image to ECR
      env:
        IMAGE_TAG : "latest"
        AWS_DEFAULT_REGION: "us-east-1"
        AWS_ACCOUNT_ID	: "${{ secrets.AWS_ACCOUNT_ID }}"
        IMAGE_REPO_NAME : "ecs-demo"
      run: |
        echo Building the Docker image.
        docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG . --file Dockerfile
        docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG 
        docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$(date +%d%m%Y)
        echo Pushing the Docker image to ECR.
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
        ls
        
    - name: Deploy ECR Image to ECS
      env:
        AWS_DEFAULT_REGION: "us-east-1"
        AWS_ECS_CLUSTER_NAME: "ecs-demo-cluster"
        AWS_ECS_SERVICE_NAME: "ecs-demo-service"
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws ecs update-service --cluster $AWS_ECS_CLUSTER_NAEM --service $AWS_ECS_SERVICE_NAME --force-new-deployment\
        aws ecs stop-task --cluster $AWS_ECS_CLUSTER_NAEM --task $(aws ecs list-tasks --cluster $AWS_ECS_CLUSTER_NAEM --service $AWS_ECS_SERVICE_NAME --output text --query taskArns[0])
